<?php
/**
 * Created by PhpStorm.
 * User: yf
 * Date: 2018-12-27
 * Time: 14:35
 */
namespace EasySwoole\Actor\Test;

use EasySwoole\Actor\AbstractActor;
use EasySwoole\Actor\ActorProcess;
use Swoole\Coroutine\Channel;
use EasySwoole\Actor\ActorConfig;

class RoomActor extends AbstractActor
{

    static function configure(ActorConfig $actorConfig)
    {
        // TODO: Implement configure() method.
        $actorConfig->setActorName('RoomActor');
        $actorConfig->setOnStart(function (ActorProcess $actorProcess){
            $data = $actorProcess->status();
            $file = 'actorData.'.$data['processIndex'].'.data';
            if(file_exists($file)){
                $data = unserialize(file_get_contents($file));
                //此处注意恢复进程的计数状态
                $actorProcess->setStatus($data);
                foreach ($data['actorList'] as $key => $item){
                    $actor = new static($item);
                    $actorProcess->wakeUpActor($actor);
                }
            }
        });

        $saveFunc = function (ActorProcess $actorProcess){
            $all = 0;
            $data = $actorProcess->status();
            $list = $data['actorList'];
            /**
             * @var  $key
             * @var AbstractActor $actor
             */
            foreach ($list as $key => $actor){
                $data['actorList'][$key] = $actor->toArray();
                $all++;
            }
            $str = serialize($data);
            file_put_contents('actorData.'.$data['processIndex'].'.data',$str);
            //避免同时输出控制台
            mt_srand();
            \co::sleep(rand(0,99)/100);
            var_dump("save {$all} actors in process ".$data['processIndex']);
        };

        //每5s落地一次
        $actorConfig->setTick(5*1000);
        $actorConfig->setOnTick($saveFunc);
        //on shutdown 仅在正常关闭的情况下执行。可以改为定时器执行。
        $actorConfig->setOnShutdown($saveFunc);
    }

    function onStart($arg)
    {
        // TODO: Implement onStart() method.
        var_dump('actorId :'.$this->actorId().' start',$arg);
    }

    function onMessage($msg)
    {
        // TODO: Implement onMessage() method.
        var_dump('actorId :'.$this->actorId().' recv '.$msg);
        //如果需要回复，则return
        return "you say : $msg";
    }

    function onExit($arg)
    {
        // TODO: Implement onExit() method.
        var_dump('actorId :'.$this->actorId().' exit and exit arg is '.$arg);
    }

    protected function onException(\Throwable $throwable)
    {
        // TODO: Implement onException() method.
    }

    function wakeUp(Channel $replyChannel)
    {
        //避免同时输出控制台
        mt_srand();
        \co::sleep(rand(0,99)/100);
        var_dump('actorId: '.$this->actorId." is wakeUp");
        parent::wakeUp($replyChannel); // TODO: Change the autogenerated stub
    }
}